# Make sure to increase resource requests and limits before using this example in production.
# For examples with more realistic resource configuration, see
# ray-cluster.complete.large.yaml and
# ray-cluster.autoscaler.large.yaml.
apiVersion: ray.io/v1
kind: RayService
metadata:
  name: model-serve
  namespace: totallylegitco
spec:
  serviceUnhealthySecondThreshold: 900 # Config for the health check threshold for Ray Serve applications. Default value is 900.
  deploymentUnhealthySecondThreshold: 300 # Config for the health check threshold for Ray dashboard agent. Default value is 300.
  # serveConfigV2 takes a yaml multi-line scalar, which should be a Ray Serve multi-application config. See https://docs.ray.io/en/latest/serve/multi-app.html.
  # Only one of serveConfig and serveConfigV2 should be used.
  serveConfigV2: |
    applications:
      applications:
        - name: app1
          route_prefix: /biogpt
          import_path: model_endpoints:biogpt

          runtime_env: {}

          deployments:

          - name: BioGPT
            num_replicas: 2

        - name: app2

          route_prefix: /openllamamed

          import_path: model_endpoints:open_llama_med

          runtime_env: {}

          deployments:

          - name: OpenLLAMAMed
            num_replicas: 2
  rayClusterConfig:
    rayVersion: '2.7.0' # should match the Ray version in the image of the containers
    ######################headGroupSpecs#################################
    # Ray head pod template.
    headGroupSpec:
      # The `rayStartParams` are used to configure the `ray start` command.
      # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
      # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
      rayStartParams:
        dashboard-host: '0.0.0.0'
      #pod template
      template:
        spec:
          nodeSelector:
            node.kubernetes.io/gpu: gpu
          containers:
            - name: ray-head
              image: holdenk/totallylegitco-modelserving:0.6
              resources:
                limits:
                  cpu: 2
                  memory: 20Gi
                  ephemeral-storage: 30Gi
                requests:
                  memory: 20Gi
                  ephemeral-storage: 30Gi
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265 # Ray dashboard
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
    workerGroupSpecs:
      # the pod replicas in this group typed worker
      - replicas: 1
        minReplicas: 1
        maxReplicas: 5
        # logical group name, for this called small-group, also can be functional
        groupName: small-group
        # The `rayStartParams` are used to configure the `ray start` command.
        # See https://github.com/ray-project/kuberay/blob/master/docs/guidance/rayStartParams.md for the default settings of `rayStartParams` in KubeRay.
        # See https://docs.ray.io/en/latest/cluster/cli.html#ray-start for all available options in `rayStartParams`.
        rayStartParams: {}
        #pod template
        template:
          spec:
            nodeSelector:
              node.kubernetes.io/gpu: gpu
            containers:
              - name: ray-worker # must consist of lower case alphanumeric characters or '-', and must start and end with an alphanumeric character (e.g. 'my-name',  or '123-abc'
                lifecycle:
                  preStop:
                    exec:
                      command: ["/bin/sh","-c","ray stop"]
                image: holdenk/totallylegitco-modelserving:0.6
                resources:
                  limits:
                    cpu: 2
                    memory: 20Gi
                    ephemeral-storage: 30Gi
                  requests:
                    memory: 20Gi
                    ephemeral-storage: 30Gi
